/* src/App.css */

/* General App Structure */
#root {
  width: 100%;
  height: calc(100vh - 40px);
  background-color: #ffffff;
  flex-grow: 1;
  padding: 20px;
}

.App {
  font-family: sans-serif;
  color: #abb2bf;
  background-color: #282c34;
  display: flex;
  flex-direction: column;
  max-width: 100%;
  height: 100%;
}

.app-header {
  background-color: #21252b;
  padding: 10px 20px;
  border-bottom: 1px solid #3e4451;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.app-title {
  margin: 0;
  color: #e06c75;
  font-size: 1.5em;
}

.log-button {
  background-color: #61afef;
  color: #282c34;
  border: none;
  padding: 8px 15px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9em;
  transition: background-color 0.2s;
}

.log-button:hover {
  background-color: #569cd6;
}

.editor-container {
  flex-grow: 1;
  overflow: hidden;
}

/* --- CodeMirror Base Styles --- */
/* Increased specificity for cm-editor to reduce !important */
.App .cm-editor {
  height: 100%;
  outline: none; /* Try without !important. If outline reappears on focus, add back. */
  padding-left: 20px;
  padding-right: 20px;
}

/* Base font size and line height for the editor text */
.App .cm-editor .cm-content {
  font-family: 'Fira Code', 'Cascadia Code', 'Consolas', monospace;
  font-size: 1em;
  line-height: 1.4;
  padding-top: 20px;    /* Try without !important. If not applied, add back. */
  padding-bottom: 20px; /* Try without !important. If not applied, add back. */
}


/* --- Syntax Highlighting (from customHighlightStyle and oneDark theme) --- */
/* Headers - Increased specificity, trying to remove !important */
.App .cm-editor .cm-header-1 { color: #e06c75; font-size: 2.2em; font-weight: bold; }
.App .cm-editor .cm-header-2 { color: #e06c75; font-size: 1.8em; font-weight: bold; }
.App .cm-editor .cm-header-3 { color: #e06c75; font-size: 1.5em; font-weight: bold; }
.App .cm-editor .cm-header-4 { color: #e06c75; font-size: 1.2em; font-weight: bold; }
.App .cm-editor .cm-header-5 { color: #e06c75; font-size: 1em;   font-weight: bold; }
.App .cm-editor .cm-header-6 { color: #e06c75; font-size: 0.9em; font-weight: bold; }

/* Bold */
.App .cm-editor .cm-strong { color: #c678dd; font-weight: bold; }

/* Italic */
.App .cm-editor .cm-emphasis { color: #e5c07b; font-style: italic; }

/* Highlight styling */
.App .cm-editor .cm-highlight { 
  background-color: rgba(0, 255, 38, 0.15); 
  color: hsl(219, 28%, 90%); 
}
  
.cm-widgetBuffer:has(+ .cm-highlight:not(.ͼ13))  {
  padding: 0px;
}

.cm-widgetBuffer:not(:has(+ .cm-highlight:not(.ͼ13))) {
  padding-right: 0px 

}

.cm-highlight:not(.ͼ13) {
  padding-left: 2px;
  padding-right: 2px;
}



.ͼ13:has(+ .cm-highlight:not(.ͼ13))  {
  padding-left: 2px;


  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
  
}

.ͼ13.cm-highlight:not(:has(+ .cm-highlight:not(.ͼ13))) {
  padding-right: 2px;


  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;  

}



/* Strikethrough styling */
.App .cm-editor .cm-strikethrough { text-decoration: line-through; color: #888; }

/* Inline Code styling */
 .cm-inline-code {
  font-family: 'Fira Code', 'Cascadia Code', 'Consolas', monospace;
  
  background-color: rgba(126, 140, 168, 0.5);
  color: #98c379;
  padding: 0px 2px;
  border-radius: 3px;
  line-height: 1.4;
}





/* Links */
.App .cm-editor .cm-link { color: #61afef; text-decoration: underline; }

/* URLs within links (e.g., the "https://www.google.com" part) */
.App .cm-editor .cm-url { color: #61afef; }

/* Blockquote */
.App .cm-editor .cm-blockquote {
  border-left: 4px solid #61afef;
  padding-left: 1em;
  color: #abb2bf;
}

/* Target the editor environment and your custom highlight mark class */
.App .cm-editor .cmt-HighlightMark {
  color: rgba(128, 128, 128, 0.6);
  font-size: 0.9em;
}

/* --- Specific Hiding/Display Adjustments for Syntax --- */
.cm-editor .cm-link-display {
  display: inline-block;
  white-space: pre-wrap;
}

/* General CodeMirror adjustments for better appearance with oneDark */
.cm-scroller {
  overflow-x: hidden;
}

.cm-content, .cm-line {
  word-wrap: break-word;
  white-space: pre-wrap;
}

/* Adjustments for the cursor */
.App .cm-editor .cm-cursor {
  border-left: 1.5px solid #528bff; /* Try without !important. If it doesn't apply, add back. */
}


/* Styles for hiding markdown markers by default */
.cm-hide-markdown-marker {
  /* Make characters completely transparent but keep them in the DOM */
  opacity: 0;
  /* Shift them slightly out of flow to prevent influencing line height,
     but keep them associated with the line.
     A small negative margin can also help pull them in without collapsing the line completely.
  */
  position: absolute; /* This takes them out of the normal flow */
  /* Adjust left/right based on how your markers are structured.
     Often, if they are at the start/end of a line, these will be 0.
     You might need to fine-tune `left` or `right` if markers are inline.
  */
  left: 0;
  right: 0;
  /* Prevent interaction with hidden markers */
  pointer-events: none;
  /* Ensure no width is taken up in the normal flow if not using position: absolute */
  /* If using position: absolute, width/height for layout are less critical for line spacing */
  width: 0;
  height: 0;
  overflow: hidden; /* Hide any stray pixels */
  line-height: 0; /* Important: this needs to be 0 or small for hidden elements */
  vertical-align: top; /* Prevents hidden elements from extending below the line */
}

/* Styles to show markdown markers when selected */
/* This class MUST override the hiding properties of .cm-hide-markdown-marker */
.cm-show-markdown-marker-on-select {
  opacity: 1 !important; /* Restore full opacity */
  pointer-events: auto !important; /* Make them interactive/selectable again */
  position: static !important; /* Restore to normal flow */
  width: auto !important; /* Restore width */
  height: auto !important; /* Restore height */
  overflow: visible !important; /* Restore overflow */
  line-height: inherit !important; /* Restore normal line height */
  vertical-align: baseline !important; /* Restore baseline alignment */
  /* Text color when selected (should contrast with your selection background) */
  color: var(--cm-selection-text-color, #000) !important;
  /* Ensure no background is applied to the marker itself by this class */
  background-color: transparent !important;
}

/* Ensure your selection background styles are still effective.
   They should be defined in your App.tsx theme and not directly in App.css for best practice.
   Example from previous turn (if you kept it):
*/
/*
&.cm-focused .cm-selectionBackground {
  background-color: #BBDEFB;
}
.cm-selectionBackground {
  background-color: #BBDEFB;
}
&.cm-focused .cm-selectionBackground span {
  color: #000;
}
*/